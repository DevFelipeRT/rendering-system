<?php

declare(strict_types=1);

namespace Rendering\Infrastructure\TemplateProcessing\Compiling\Directive\Compiler\Stateful;

use Rendering\Infrastructure\TemplateProcessing\Compiling\Directive\Compiler\AbstractDirectiveCompiler;

/**
 * Compiles @once and @endonce directives.
 *
 * An identifier is generated by hashing the content of the @once block.
 * Nested directives within the block are compiled recursively.
 */
final class OnceCompiler extends AbstractDirectiveCompiler
{
    /**
     * Compiles all @once...@endonce blocks within the template content.
     *
     * Delegates to the parent compiler after its own processing is complete.
     *
     * @param string $content The template content to compile.
     * @return string The compiled content.
     */
    public function compile(string $content): string
    {
        $pattern = '/@once(.*?)@endonce/s';

        $processedContent = preg_replace_callback(
            $pattern,
            [$this, 'compileOnceBlock'],
            $content
        );
        
        return parent::compile($processedContent);
    }

    /**
     * The callback for `preg_replace_callback`.
     *
     * Hashes the block's inner content to generate a deterministic ID and
     * recursively compiles the content.
     *
     * @param array $matches The matches where $matches[1] is the inner content.
     * @return string The compiled PHP block.
     */
    private function compileOnceBlock(array $matches): string
    {
        $innerContent = $matches[1];
        $id = hash('sha256', $innerContent);
        $compiledInnerContent = $this->compile($innerContent);

        return "<?php if (\$viewApi->shouldRenderOnce('{$id}')) { ?>"
             . $compiledInnerContent
             . "<?php } ?>";
    }
}